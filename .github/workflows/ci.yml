name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  RAILS_ENV: test
  RUBY_VERSION: 3.4.5
  NODE_VERSION: lts/*

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
        bundler-cache: true

    - name: Run RuboCop
      run: bundle exec rubocop --parallel --format github

  test:
    runs-on: ubuntu-latest
    needs: lint

    steps:
    - uses: actions/checkout@v4

    - name: Setup Ruby & Node
      run: |
        # Параллельная установка через apt
        sudo apt-get update -qq
        sudo apt-get install -y libpq-dev libsqlite3-dev &

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
        bundler-cache: true

    - uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: npm

    - name: Install & setup
      run: |
        npm ci --prefer-offline
        bundle exec rails db:setup

    - name: Run tests
      run: bundle exec rspec

    - name: Generate Swagger docs
      run: bundle exec rails rswag:specs:swaggerize

    - name: Upload Swagger artifacts
      uses: actions/upload-artifact@v4
      with:
        name: swagger-docs
        path: swagger/
        retention-days: 30

  build:
    if: github.ref == 'refs/heads/main'
    needs: [lint, test]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Download Swagger docs
      uses: actions/download-artifact@v4
      with:
        name: swagger-docs
        path: swagger/

    - uses: docker/setup-buildx-action@v3

    - uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.production
        target: production
        tags: |
          ${{ github.repository }}:latest
          ${{ github.repository }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64
        push: true
